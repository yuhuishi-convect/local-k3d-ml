proxy:
  service:
    type: ClusterIP
ingress:
  enabled: true
  hosts:
    - dev-box
  annotations:
    kubernetes.io/ingress.class: "traefik"
hub:
  config:
    GitHubOAuthenticator:
      client_id: <PUT YOUR IGTHUB CLIENT ID>
      client_secret: <PUT YOUR IGTHUB CLIENT SECRET>
      oauth_callback_url: http://dev-box:9090/hub/oauth_callback
    JupyterHub:
      authenticator_class: github
singleuser:
  defaultUrl: "/lab"             
  # Defines the default image
  image:
    name: elyra/elyra
    tag: latest
  # mount additional shared volume storage for all users
  storage:
    extraVolumes:
      - name: shared-storage
        persistentVolumeClaim:
          claimName: shared-notebook-pvc
    extraVolumeMounts:
      - name: shared-storage
        mountPath: /home/jovyan/shared
  # add kfp runtime information
  lifecycleHooks:
    postStart:
      exec:
        command: 
        - sh
        - -cex 
        - |
          mkdir -p /home/jovyan/.local/share/jupyter/metadata/runtimes/
          cat << EOF > /home/jovyan/.local/share/jupyter/metadata/runtimes/remote-kfp.json
          {
            "display_name": "kfp-remote",
            "metadata": {
              "api_endpoint": "http://ml-pipeline-ui.kubeflow/pipeline",
              "cos_endpoint": "http://minio-service.kubeflow:9000",
              "cos_username": "minio",
              "cos_password": "minio123",
              "cos_bucket": "elyra",
              "engine": "Argo",
              "tags": []
            },
            "schema_name": "kfp"
          }
          EOF
  profileList:
    - display_name: "Elyra environment"
      description: "Notebook environment with elyra plugin enabled"
      default: true

    - display_name: "Code Server"
      description: "Environment with extra Code Server"
      kubespawner_override:
        image: dayeye2006/jupyter-cdr:latest
  extraFiles:
    jupyter_server_proxy:
      mountPath: /home/jovyan/.jupyter/jupyter_notebook_config.py
      stringData: |
        c.ServerProxy.servers = {
          'code-server': {
            'command': [
              'code-server',
                '--auth=none',
                '--disable-telemetry',
                '--bind-addr=localhost:{port}'
            ],
            'timeout': 20,
            'launcher_entry': {
              'title': 'VS Code'
            }
          }
        }